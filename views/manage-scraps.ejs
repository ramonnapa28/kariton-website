<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Manage Scraps | Kariton</title>
  <link rel="shortcut icon" type="image/png" href="../assets/images/logos/favicon.png" />  
  <link rel="icon" href="img/home-logo.png" type="image/x-icon"/>
  <link rel="stylesheet" href="../assets/css/styles.min.css" />
      <!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

<!-- Bootstrap JS (with Popper.js for modals) -->
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
</head>

<style>
         /* Global Styles */
         body {
      background-color: #f4f7fc;
      color: #333;
      margin: 0;
      padding: 0;
    }

    .container-fluid {
      max-width: 90%;
      margin: 0 auto;
    }

    /* Card Styling */
    .card {
      background: #fff;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      border-radius: 10px;
      margin-bottom: 20px;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .card-body {
      padding: 20px;
    }

    .card-title {
      font-size: 1.2rem;
      font-weight: 600;
      color: #444;
      margin-bottom: 10px;
    }

    .pagination-wrapper {
      display: flex;
      justify-content: center;
      gap: 15px;
      margin-top: 30px;
    }

    .pagination-btn {
      background-color: #5c6bc0;
      color: #fff;
      padding: 12px 18px;
      border-radius: 8px;
      border: none;
      cursor: pointer;
      transition: background-color 0.3s ease, transform 0.3s ease;
      font-weight: 500;
    }

    .pagination-btn:hover {
      background-color: #3f51b5;
      transform: scale(1.05);
    }

    .pagination-btn:disabled {
      background-color: #b0bec5;
      cursor: not-allowed;
    }

    /* Status Indicator Styling */
    .status-indicator {
      font-size: 0.875rem;
      display: flex;
      align-items: center;
    }

    .status-indicator i {
      margin-right: 5px;
      font-size: 1.2rem;
    }

    .status-indicator .pending {
      color: #ff9800;
    }

    .status-indicator .approved {
      color: #4caf50;
    }

    .status-indicator .rejected {
      color: #f44336;
    }

    /* Filter and Form Styling */
    .custom-select {
      padding: 10px 20px;
      font-size: 14px;
      border-radius: 8px;
      border: 1px solid #e0e0e0;
      width: 180px;
      transition: border 0.3s ease;
    }

    .custom-select:focus {
      border-color: #5c6bc0;
    }

    .filter-container {
      display: flex;
      justify-content: flex-end;
      align-items: center;
      margin-bottom: 20px;
    }

    .filter-container label {
      margin-left: 10px;
      font-weight: 500;
      font-size: 0.9rem;
      color: #444;
    }

    /* Button Styling */
    .btn {
      border-radius: 8px;
      padding: 8px 15px;
      transition: background-color 0.3s ease, transform 0.2s ease;
      font-weight: 600;
    }

    .btn-success {
      background-color: #4caf50;
      color: #fff;
    }

    .btn-success:hover {
      background-color: #388e3c;
      transform: scale(1.05);
    }

    .btn-danger {
      background-color: #f44336;
      color: #fff;
    }

    .btn-danger:hover {
      background-color: #d32f2f;
      transform: scale(1.05);
    }

    .btn-primary {
      color: #fff;
      border-color: #017223;
    }

    .btn-primary:hover {
      background-color: #3f51b5;
      transform: scale(1.05);
    }

    /* Mobile Responsiveness */
    @media (max-width: 768px) {
      .filter-container {
        flex-direction: column;
        align-items: flex-start;
      }

      .pagination-wrapper {
        flex-direction: column;
        align-items: center;
      }
    }
      /* Sidebar Container */
.sidebar-nav {
    color: #fff; /* White text color */
    font-family: 'Arial', sans-serif;
  }
  
  /* Sidebar Links */
  .sidebar-item a {
    text-decoration: none;
    align-items: center;
    padding: 10px 15px;
    margin: 5px 0;
  }
  
  /* Sidebar item hover effect */
  .sidebar-item a:hover {
    padding-left: 20px; /* Slide effect on hover */
  }
  
  /* Sidebar icons */
  .sidebar-item i {
    margin-right: 10px; /* Space between icon and text */
  }
 /* Active Sidebar Item */
.sidebar-item.active a {
  background: #007bff; /* Blue background for active item */
  padding-left: 20px; /* Slide effect for active items */
  transition: background-color 0.3s, padding-left 0.3s; /* Smooth transition */
}

/* Hover Effect on Active Sidebar Item */
.sidebar-item.active a:hover {
  background: #0056b3; /* Darker blue when hovered */
  padding-left: 25px; /* Slightly more slide effect */
}

    
  /* Mobile Responsive Design */
  @media (max-width: 768px) {
    .sidebar-nav {
      width: 200px;
    }
  
    #sidebarnav li {
      font-size: 14px;
    }
  }

  /* General Styling for Header */
  
  .navbar-nav .nav-item .nav-link {
    color: #333;
    transition: color 0.3s ease;
  }
  
  .nav-icon-hover:hover {
    color: #007bff; /* Highlight color */
  }
  
  /* Sidebar Toggle Button for Mobile */
  .sidebartoggler i {
    font-size: 1.5rem;
  }
  
  /* Header Text Styling */
  .header-text {
    padding: 5px 15px;
    border-radius: 8px;
    color: #333;
    font-weight: bold;
    font-size: 1rem;
  }
  
  .header-text span {
    color: #007bff;
    font-size: 1.1rem;
  }
  
  /* Profile Dropdown */
  .profile-icon {
    transition: transform 0.2s ease;
  }
  
  .profile-icon:hover {
    transform: scale(1.1);
  }
  
  .dropdown-menu-animate-up {
    transform: translateY(10px);
    opacity: 0;
    transition: transform 0.3s ease, opacity 0.3s ease;
  }
  
  .show .dropdown-menu-animate-up {
    transform: translateY(0);
    opacity: 1;
  }
  
  .username {
    font-weight: bold;
    color: #333;
    margin-bottom: 8px;
  }
  
  .btn-outline-primary {
    transition: background-color 0.3s ease, color 0.3s ease;
  }
  
  .btn-outline-primary:hover {
    background-color: #085f38;
    color: #fff;
  }
  
  /* Responsive Styling */
  @media (max-width: 768px) {
    .header-text {
      font-size: 0.9rem;
      padding: 3px 10px;
    }
  }
  .dropdown-menu .message-body {
    display: flex;
    justify-content: center; /* Centers the button horizontally */
    align-items: center; /* Centers the button vertically */
    height: 100%; /* Ensures the container has a height to center the button */
}
/* Card body design */
.card-body {
      background-color: #f6f6f6ca; /* Light gray background */
      padding: 2rem;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Shadow effect */
    }

    /* Title and Download Button Row */
    .d-flex.justify-content-between.align-items-center.mb-4 {
      border-bottom: 2px solid #dee2e6; /* Bottom border for separation */
      padding-bottom: 10px;
      margin-bottom: 20px;
    }

    .pagination-btn {
      padding: 10px 20px;
      font-size: 16px;
      border-radius: 5px;
      margin: 0 10px;
      color: white;
      background-color: #6c757d; /* Bootstrap's secondary color */
      border: none;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    .pagination-btn:hover {
      background-color: #5a6268;
    }

    .pagination-btn:disabled {
      background-color: #adb5bd;
      cursor: not-allowed;
    }

    /* Table Design */
    .table {
      border-collapse: collapse;
      width: 100%;
    }

    .table th, .table td {
      padding: 12px 15px;
      border: 1px solid #dee2e6;
      text-align: left;
    }

    .table th {
      background-color: #37775641;
      font-weight: bold;
    }

    /* Search Input */
    #searchInput {
      width: 100%;
      padding: 12px;
      margin-bottom: 20px;
      border-radius: 5px;
      border: 1px solid #ced4da;
      box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
    }

 /* Card Styling */
.card {
    background-color: #d8efd2;;
    border: none;
    border-radius: 1rem;
    overflow: hidden;
    transition: transform 0.3s ease;
    height: 100%;
}

.card-header {
    background-color: #14301b;
    color: #fff;
    border-bottom: 2px solid #2b3537;
}
  /* Sidebar Container */
.sidebar-nav {
    color: #fff; /* White text color */
    font-family: 'Arial', sans-serif;
  }
  
  /* Sidebar Links */
  .sidebar-item a {
    text-decoration: none;
    align-items: center;
    padding: 10px 15px;
    margin: 5px 0;
  }
  
  /* Sidebar item hover effect */
  .sidebar-item a:hover {
    padding-left: 20px; /* Slide effect on hover */
  }
  
  /* Sidebar icons */
  .sidebar-item i {
    margin-right: 10px; /* Space between icon and text */
  }
 /* Active Sidebar Item */
.sidebar-item.active a {
  background: #007bff; /* Blue background for active item */
  padding-left: 20px; /* Slide effect for active items */
  transition: background-color 0.3s, padding-left 0.3s; /* Smooth transition */
}

/* Hover Effect on Active Sidebar Item */
.sidebar-item.active a:hover {
  background: #0056b3; /* Darker blue when hovered */
  padding-left: 25px; /* Slightly more slide effect */
}

    
  /* Mobile Responsive Design */
  @media (max-width: 768px) {
    .sidebar-nav {
      width: 200px;
    }
  
    #sidebarnav li {
      font-size: 14px;
    }
  }

  /* General Styling for Header */
  
  .navbar-nav .nav-item .nav-link {
    color: #333;
    transition: color 0.3s ease;
  }
  
  .nav-icon-hover:hover {
    color: #007bff; /* Highlight color */
  }
  
  /* Sidebar Toggle Button for Mobile */
  .sidebartoggler i {
    font-size: 1.5rem;
  }
  
  /* Header Text Styling */
  .header-text {
    padding: 5px 15px;
    border-radius: 8px;
    color: #333;
    font-weight: bold;
    font-size: 1rem;
  }
  
  .header-text span {
    color: #007bff;
    font-size: 1.1rem;
  }
  
  /* Profile Dropdown */
  .profile-icon {
    transition: transform 0.2s ease;
  }
  
  .profile-icon:hover {
    transform: scale(1.1);
  }
  
  .dropdown-menu-animate-up {
    transform: translateY(10px);
    opacity: 0;
    transition: transform 0.3s ease, opacity 0.3s ease;
  }
  
  .show .dropdown-menu-animate-up {
    transform: translateY(0);
    opacity: 1;
  }
  
  .username {
    font-weight: bold;
    color: #333;
    margin-bottom: 8px;
  }
  
  .btn-outline-primary {
    transition: background-color 0.3s ease, color 0.3s ease;
  }
  
  .btn-outline-primary:hover {
    background-color: #007bff;
    color: #fff;
  }
  
  /* Responsive Styling */
  @media (max-width: 768px) {
    .header-text {
      font-size: 0.9rem;
      padding: 3px 10px;
    }
  }
  .dropdown-menu .message-body {
    display: flex;
    justify-content: center; /* Centers the button horizontally */
    align-items: center; /* Centers the button vertically */
    height: 100%; /* Ensures the container has a height to center the button */
}


</style>

<body>
  <div class="page-wrapper" id="main-wrapper" data-layout="vertical" data-navbarbg="skin6" data-sidebartype="full"
  data-sidebar-position="fixed" data-header-position="fixed">
  
  <!-- Sidebar Start -->
  <div class="left-sidebar">
    <div><%- include('./partials/sidebar'); -%></div>
  </div>
  <!-- Sidebar End -->

  <div class="body-wrapper">
    <div><%- include('./partials/head'); -%></div>
    <div class="container-fluid">
      <!-- Manage Scraps Section -->
      <div class="col-lg d-flex align-items-stretch">
        <div class="card w-100">
          <div class="card-body p-4">
            <h5 class="card-title fw-semibold mb-4 fs-8">Manage Scraps</h5>
            <div class="table-responsive">
              <table class="table text-nowrap mb-0 align-middle">
                <thead class="text-dark fs-4">
                  <tr>
                    <th class="border-bottom-0"><h6 class="fw-semibold mb-0">Scrap Type</h6></th>
                    <th class="border-bottom-0"><h6 class="fw-semibold mb-0">Price per Kilo</h6></th>
                    <th class="border-bottom-0"><h6 class="fw-semibold mb-0">Actions</h6></th>
                  </tr>
                </thead>
                <tbody id="scrap-table-body">
                  <% scraps.forEach((scrap) => { %>
                    <% if (scrap.status === 'active') { %>
                      <tr>
                        <td class="border-bottom-0">
                          <p class="mb-0 fw-normal scrap-type"><%= scrap.scrapType %></p>
                        </td>
                        <td class="border-bottom-0">
                          <p class="mb-0 fw-normal scrap-price">₱<%= scrap.pointsEquivalent %></p>
                        </td>
                        <td class="border-bottom-0">
                          <button class="btn btn-primary edit-scrap-btn" data-scrap-id="<%= scrap._id %>" style="background-color: rgb(38, 77, 38); color: white;">Edit</button>
                          <button 
                            class="btn btn-danger delete-scrap-btn" 
                            data-scrap-id="<%= scrap._id %>" 
                            onclick="confirmDisable('<%= scrap._id %>')"
                          >
                            Disable
                          </button>
                        </td>
                      </tr>
                    <% } %>
                  <% }); %>
                </tbody>
              </table>
            </div>
            <button id="add-scrap-btn" class="btn btn-primary mt-3" style="background-color: green; color: white;">Add Scrap</button>
          </div>
        </div>
      </div>
  <!-- Scrap Modal -->
  <div class="modal fade" id="scrapModal" tabindex="-1" aria-labelledby="scrapModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="scrapModalLabel">Add Scrap</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="scrap-form">
            <div class="mb-3">
              <label for="scrap-type" class="form-label">Scrap Type</label>
              <input type="text" class="form-control" id="scrap-type" required>
            </div>
            <div class="mb-3">
              <label for="scrap-price" class="form-label">Price per Kilo</label>
              <input type="number" class="form-control" id="scrap-price" step="0.01" required>
            </div>
            <input type="hidden" id="scrap-index">
            <button type="submit" class="btn btn-primary" style="background-color: green; color: white;">Save</button>
          </form>
        </div>
      </div>
    </div>
  </div>


      <!-- Disabled Scraps Section -->
      <div class="col-lg d-flex align-items-stretch mt-4">
        <div class="card w-100">
          <div class="card-body p-4">
            <h5 class="card-title fw-semibold mb-4 fs-8">Disabled Scraps</h5>
            <div class="table-responsive">
              <table class="table text-nowrap mb-0 align-middle">
                <thead class="text-dark fs-4">
                  <tr>
                    <th class="border-bottom-0"><h6 class="fw-semibold mb-0">Scrap Type</h6></th>
                    <th class="border-bottom-0"><h6 class="fw-semibold mb-0">Price per Kilo</h6></th>
                    <th class="border-bottom-0"><h6 class="fw-semibold mb-0">Actions</h6></th>
                  </tr>
                </thead>
                <tbody id="disabled-scrap-table-body">
                  <% scraps.forEach((scrap) => { %>
                    <% if (scrap.status === 'disable') { %>
                      <tr>
                        <td class="border-bottom-0">
                          <p class="mb-0 fw-normal disabled-scrap-type"><%= scrap.scrapType %></p>
                        </td>
                        <td class="border-bottom-0">
                          <p class="mb-0 fw-normal disabled-scrap-price">₱<%= scrap.pointsEquivalent %></p>
                        </td>
                        <td class="border-bottom-0">
                          <button 
                            class="btn btn-success enable-scrap-btn" 
                            data-scrap-id="<%= scrap._id %>" 
                            onclick="enableScrap('<%= scrap._id %>')"
                          >
                            Enable
                          </button>
                        </td>
                      </tr>
                    <% } %>
                  <% }); %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- Custom Confirmation Modal -->
<div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="confirmationModalLabel">Confirm Action</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p id="confirmationMessage">Are you sure you want to proceed?</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-danger" id="confirmActionBtn">Yes, Proceed</button>
      </div>
    </div>
  </div>
</div>

  </div>
</div>

  <script src="../assets/libs/jquery/dist/jquery.min.js"></script>
  <script src="../assets/libs/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
  <script src="../assets/js/sidebarmenu.js"></script>
  <script src="../assets/js/app.min.js"></script>
  <script src="../assets/libs/simplebar/dist/simplebar.js"></script>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const scrapTableBody = document.getElementById('scrap-table-body');
      const disabledScrapTableBody = document.getElementById('disabled-scrap-table-body');
      const scrapModal = new bootstrap.Modal(document.getElementById('scrapModal'));
      const confirmationModal = new bootstrap.Modal(document.getElementById('confirmationModal'));
      const confirmationMessage = document.getElementById('confirmationMessage');
      const confirmActionBtn = document.getElementById('confirmActionBtn');
      const scrapForm = document.getElementById('scrap-form');
      const scrapTypeInput = document.getElementById('scrap-type');
      const scrapPriceInput = document.getElementById('scrap-price');
  
      let editingScrapId = null;
      let confirmCallback = null;
  
      // Reusable function to show confirmation modal
      function showConfirmationModal(message, callback) {
        confirmationMessage.textContent = message;
        confirmCallback = callback;
        confirmationModal.show();
      }
  
      // Confirm action when user clicks the "Yes, Proceed" button
      confirmActionBtn.addEventListener('click', function () {
        if (confirmCallback) {
          confirmCallback();
        }
        confirmationModal.hide();
      });
  
      // Function to disable scrap
      function disableScrap(scrapId) {
        fetch(`/junkshop/scraps`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ type: 'disable', scrapId: scrapId }),
        })
          .then(response => {
            if (response.ok) {
              window.location.reload();
            } else {
              console.error("Failed to disable scrap");
            }
          })
          .catch(error => {
            console.error("Error disabling scrap:", error);
          });
      }

      // Open the modal for adding a new scrap
      document.getElementById('add-scrap-btn').addEventListener('click', function () {
        scrapForm.reset();
        scrapTypeInput.disabled = false; // Allow entry for new scrap
        document.getElementById('scrapModalLabel').textContent = 'Add Scrap';
        editingScrapId = null; // Clear editing ID
        scrapModal.show();
      });
  
      // Function to enable scrap
      function enableScrap(scrapId) {
        fetch(`/junkshop/scraps`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ type: 'enable', scrapId: scrapId }),
        })
          .then(response => {
            if (response.ok) {
              window.location.reload();
            } else {
              console.error("Failed to enable scrap");
            }
          })
          .catch(error => {
            console.error("Error enabling scrap:", error);
          });
      }
  
      // Event delegation for edit and delete buttons
      scrapTableBody.addEventListener('click', function (event) {
        if (event.target.classList.contains('delete-scrap-btn')) {
          const scrapId = event.target.getAttribute('data-scrap-id');
          showConfirmationModal("Are you sure you want to disable this scrap?", function () {
            disableScrap(scrapId);
          });
        }
  
        if (event.target.classList.contains('edit-scrap-btn')) {
          const row = event.target.closest('tr');
          scrapTypeInput.value = row.querySelector('.scrap-type').textContent;
          scrapPriceInput.value = row.querySelector('.scrap-price').textContent.replace('₱', '');
          scrapTypeInput.disabled = false; // Allow entry for editing
          document.getElementById('scrapModalLabel').textContent = 'Edit Scrap';
          editingScrapId = event.target.getAttribute('data-scrap-id'); // Store scrapId for editing
          scrapModal.show();
        }
      });
  
      // Event delegation for enable buttons
      disabledScrapTableBody.addEventListener('click', function (event) {
        if (event.target.classList.contains('enable-scrap-btn')) {
          const scrapId = event.target.getAttribute('data-scrap-id');
          showConfirmationModal("Are you sure you want to enable this scrap?", function () {
            enableScrap(scrapId);
          });
        }
      });
  
      // Handle form submission for adding or updating scrap
      scrapForm.addEventListener('submit', async function (event) {
        event.preventDefault();
        const scrapType = scrapTypeInput.value.trim();
        const price = scrapPriceInput.value;
  
        // Check if the scrap type already exists
        const existingScrapTypes = Array.from(scrapTableBody.querySelectorAll('.scrap-type')).map(el => el.textContent.trim());
        if (existingScrapTypes.includes(scrapType) && !editingScrapId) {
          alert("This scrap type already exists in the list. Please choose a different type.");
          return; // Prevent form submission
        }
  
        const scrapData = {
          scrapType: scrapType,
          price: price,
        };
  
        try {
          const requestBody = { ...scrapData, scrapId: editingScrapId };
  
          const response = await fetch('/junkshop/scraps', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(requestBody),
          });
  
          if (response.ok) {
            window.location.reload(); // Reload page after successful submission
          } else {
            console.error("Failed to save scrap");
          }
        } catch (error) {
          console.error("Error saving scrap:", error);
        }
      });
    });
  </script>
  
  
</body>

</html>
